[{"/home/rafael/Projects/mapsassetsfrontend/src/App.tsx":"1","/home/rafael/Projects/mapsassetsfrontend/src/index.tsx":"2","/home/rafael/Projects/mapsassetsfrontend/src/views/dashboard/index.tsx":"3","/home/rafael/Projects/mapsassetsfrontend/src/component/header/index.tsx":"4","/home/rafael/Projects/mapsassetsfrontend/src/views/positions/index.tsx":"5","/home/rafael/Projects/mapsassetsfrontend/src/api/data_control.tsx":"6","/home/rafael/Projects/mapsassetsfrontend/src/models/user.tsx":"7","/home/rafael/Projects/mapsassetsfrontend/src/api/api.tsx":"8"},{"size":556,"mtime":1611539920799,"results":"9","hashOfConfig":"10"},{"size":641,"mtime":1611589246361,"results":"11","hashOfConfig":"10"},{"size":1163,"mtime":1611601257073,"results":"12","hashOfConfig":"10"},{"size":890,"mtime":1611544630123,"results":"13","hashOfConfig":"10"},{"size":3128,"mtime":1611598406149,"results":"14","hashOfConfig":"10"},{"size":684,"mtime":1611600091274,"results":"15","hashOfConfig":"10"},{"size":538,"mtime":1611599841020,"results":"16","hashOfConfig":"10"},{"size":116,"mtime":1611597502817,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r6584l",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rafael/Projects/mapsassetsfrontend/src/App.tsx",[],"/home/rafael/Projects/mapsassetsfrontend/src/index.tsx",[],["36","37"],"/home/rafael/Projects/mapsassetsfrontend/src/views/dashboard/index.tsx",["38"],"/home/rafael/Projects/mapsassetsfrontend/src/component/header/index.tsx",[],"/home/rafael/Projects/mapsassetsfrontend/src/views/positions/index.tsx",["39","40"],"import React from \"react\";\n\nimport Position from \"../../models/position\";\n\nimport './styles.css';\n\nfunction sellPosition(position: Position){\n    const input = prompt(position.asset.name);\n    if(!input) return;\n\n    const amount = Number.parseInt(input);\n    if(amount > position.amount){\n        alert(\"Você não tem ações suficientes para vender.\");\n        return;\n    }\n\n\n}\n\nexport default class Positions extends React.Component<{}, {list: Array<Position>}> {\n    componentWillMount(){\n        \n    }\n    render(){\n        this.updatePositions();\n        return (\n            <div className=\"positions-box\">\n                <div className=\"position-table\">\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>Quantidade</th>\n                            <th>Preço de Mercado</th>\n                            <th>Rendimento</th>\n                            <th>Lucro</th>\n                            <th>Opções</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.list.map(function(position: Position){\n                            return (\n                                <tr key={position.asset.name}>\n                                    <td>{position.asset.name}</td>\n                                    <td>{position.amount} Ações</td>\n                                    <td>R$ {position.marketPrice}</td>\n                                    <td>R$ {position.income}</td>\n                                    <td>R$ {position.gain}</td>\n                                    <td className=\"row-button\">\n                                        <a onClick={() => sellPosition(position)}>Vender</a>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </div>\n            </div>\n        );\n    }\n    updatePositions(){\n        this.state = {\n            list: [\n                {\n                    asset: {\n                        name: \"asset loko\",\n                        marketPrice: 648,\n                        type: \"RF\"\n                    },\n                    amount: 32,\n                    marketPrice:4651,\n                    income: 169851,\n                    gain:16321\n                },\n                {\n                    asset: {\n                        name: \"asset loko\",\n                        marketPrice: 648,\n                        type: \"RF\"\n                    },\n                    amount: 32,\n                    marketPrice:4651,\n                    income: 169851,\n                    gain:16321\n                },\n                {\n                    asset: {\n                        name: \"asset loko\",\n                        marketPrice: 648,\n                        type: \"RF\"\n                    },\n                    amount: 32,\n                    marketPrice:4651,\n                    income: 169851,\n                    gain:16321\n                }\n            ]\n        };\n    }\n}","/home/rafael/Projects/mapsassetsfrontend/src/api/data_control.tsx",["41"],"/home/rafael/Projects/mapsassetsfrontend/src/models/user.tsx",[],"/home/rafael/Projects/mapsassetsfrontend/src/api/api.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":49,"column":41,"nodeType":"52","endLine":49,"endColumn":83},{"ruleId":"53","severity":1,"message":"54","line":60,"column":9,"nodeType":"55","endLine":60,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":29,"column":1,"nodeType":"58","endLine":29,"endColumn":28},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'DataControl' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]